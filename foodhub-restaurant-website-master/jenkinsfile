pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'shreyasc19/foodhub'
        DOCKER_CREDENTIALS_ID = 'dockerhub-creds'
    }

    stages {
        stage('Clone Repo') {
            steps {
                checkout scm
            }
        }

        stage('Check Workspace') {
            steps {
                echo 'Listing files in workspace to check Dockerfile presence'
                sh 'ls -la'
            }
        }

        stage('Debug Docker Access') {
            steps {
                echo 'Checking Docker access and user permissions'
                sh 'echo "Running as user: $(id -un)"'
                sh 'echo "Groups: $(groups)"'
                sh 'echo "Docker Access Test:"'
                sh 'docker ps'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    try {
                        echo "Building Docker image: ${DOCKER_IMAGE}:latest"
                        def customImage = docker.build("${DOCKER_IMAGE}:latest")
                        echo "Successfully built image: ${customImage.id}"
                    } catch (Exception e) {
                        echo "Docker build failed: ${e}"
                        error("Aborting pipeline due to Docker build failure.")
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        docker.image("${DOCKER_IMAGE}:latest").push()
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh 'kubectl apply -f k8s/deployment.yaml'
                sh 'kubectl apply -f k8s/service.yaml'
            }
        }
    }
}
